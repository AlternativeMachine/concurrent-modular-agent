# MkDocsサイトをGitHub Pagesにデプロイするワークフロー
name: Deploy MkDocs to GitHub Pages

on:
  # 'dev_doc' ブランチの 'docs/' ディレクトリか 'mkdocs.yml' ファイルにpushがあった場合に実行
  push:
    branches:
      - dev_doc
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  # GitHubのUIから手動でワークフローを実行できるようにする
  workflow_dispatch:

# ワークフローが必要とする権限を設定
permissions:
  contents: read
  pages: write
  id-token: write

# 同時実行に関する設定
# "pages"というグループで同時に1つのデプロイのみを実行する
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # ビルドジョブ
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. リポジトリのコードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Gitの全履歴を取得（バージョン表示などに必要）
          fetch-depth: 0

      # 2. Python環境をセットアップ
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # 3. 必要なPythonパッケージをインストール
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material pymdown-extensions

      # 4. MkDocsでサイトをビルド
      - name: Build MkDocs site
        run: mkdocs build

      # 5. GitHub Pages用の設定を行う
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 6. ビルドしたサイト（'site'ディレクトリ）をアーティファクトとしてアップロード
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './site'

  # デプロイジョブ
  deploy:
    # 'build' ジョブが成功した後に実行される
    needs: build
    # デプロイ環境の設定
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # 1. アップロードされたアーティファクトをGitHub Pagesにデプロイ
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
